<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mutong.dao.article.BlogArticleMapper">
  <resultMap id="BaseResultMap" type="com.mutong.entity.article.BlogArticle">
    <id column="id" property="id" jdbcType="BIGINT"/>
    <result column="user_id" property="userId" jdbcType="BIGINT"/>
    <result column="title" property="title" jdbcType="VARCHAR"/>
    <result column="cover" property="cover" jdbcType="VARCHAR"/>
    <result column="author" property="author" jdbcType="VARCHAR"/>
    <result column="category" property="category" jdbcType="VARCHAR"/>
    <result column="tag" property="tag" jdbcType="VARCHAR"/>
    <result column="state" property="state" jdbcType="INTEGER"/>
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    <result column="type" property="type" jdbcType="INTEGER"/>
    <result column="views" property="views" jdbcType="BIGINT"/>
    <result column="allow_comment" property="allowComment" jdbcType="BIT"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mutong.entity.article.BlogArticleWithBLOBs"
    extends="BaseResultMap">
    <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    <result column="content_md" property="contentMd" jdbcType="LONGVARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, title, cover, author, category, tag, state, creat_time, update_time, 
    type, views, allow_comment
  </sql>
  <sql id="Blob_Column_List">
    content, content_md
  </sql>
  <update id="addViews">
    update blog_article set  views=views+1 where id = #{id}
  </update>
  <select id="selectAll" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from blog_article
    <where>
      <if test="article.title!=null">
        title like CONCAT('%',#{article.title},'%')
      </if>
      <if test="article.title!=null">
        and content like CONCAT('%',#{article.content},'%')
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from blog_article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog_article
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mutong.entity.article.BlogArticleWithBLOBs">
    insert into blog_article (id, user_id, title, 
      cover, author, category, 
      tag, state, creat_time, 
      update_time, type, views, 
      allow_comment, content, content_md
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{cover,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{tag,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{creatTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, #{views,jdbcType=BIGINT}, 
      #{allowComment,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR}, #{contentMd,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mutong.entity.article.BlogArticleWithBLOBs">
    insert into blog_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="views != null">
        views,
      </if>
      <if test="allowComment != null">
        allow_comment,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="contentMd != null">
        content_md,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="views != null">
        #{views,jdbcType=BIGINT},
      </if>
      <if test="allowComment != null">
        #{allowComment,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="contentMd != null">
        #{contentMd,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective"
    parameterType="com.mutong.entity.article.BlogArticleWithBLOBs">
    update blog_article
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="views != null">
        views = #{views,jdbcType=BIGINT},
      </if>
      <if test="allowComment != null">
        allow_comment = #{allowComment,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="contentMd != null">
        content_md = #{contentMd,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs"
    parameterType="com.mutong.entity.article.BlogArticleWithBLOBs">
    update blog_article
    set user_id = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      views = #{views,jdbcType=BIGINT},
      allow_comment = #{allowComment,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR},
      content_md = #{contentMd,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mutong.entity.article.BlogArticle">
    update blog_article
    set user_id = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      views = #{views,jdbcType=BIGINT},
      allow_comment = #{allowComment,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>